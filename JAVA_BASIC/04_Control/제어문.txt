조건문

if 문 	 - 조건식의 결과는 (true,fasle)

switch문 - 조건식의 결과는 정수 또는 문자,문자열
	  (실수는 안된다.)

	break; - 빠져나간다.
	default - 아무것도 걸리지 않았을때.
		 if문의 else와 똑같다.

break; 가 없으면 빠져나가지 못하고 다음 문장 수행
default : 마지막이기에 break;가 없어도 된다.

스택이라는공간에
메인이라는 메소드부터 쌓인다.

LIFO(Last In Fisrt Out) 방식.

stack

methodC
methodB
methodA
main

반복문( For문 )

for(초기식; 조건식; 증감식)(){
	수행할 문장;
}

처음에 for문에 들어갈때만 초기식을 수행하고,
조건이 true 이면 문장수행.
조건이 false 이면 수행하지 않음.

증감하는값이 다시 조건식에 부합하는지 보고
true이면 다시 수행.

< while문 >

while문,
do~while문,

(초기식)

while(조건식){
	수행될 문장;	
	(증감식 or 분기문);
}

조건식이 true 일동안 문장 수행.
while같은 경우는 증감식

do{
   수행될 문장;
   [증감식 or 분기문]

}while(조건식);

do안의 내용 먼저 실행
조건식 환인 후 true면 문장 수행
false면 종료
while 뒤에 ; 꼭 필요

while문 과 다르게 최소 한번은 수행되게 보장한다.
메뉴를 만들때 많이 사용한다.

분기문

break;
반복문에서는 break문 자신이 포함된 
가장 가까운 반복문을 빠져나가는 구문

for(int i = 1;; i++){
 	System.out.println(i + "출력");

	if(i >= 10) {
		break;
		}
}

break 만나면 가장가까운 반복문인 for문을 나간다.

