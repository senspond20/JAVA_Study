
생성자 -----> 하는 역할 : 객체 생성.

(접근제한자) 클래스명.


new 연산자를 통해 Heap메모리 영역에 할당 될 때
객체 안에서 만들어지는 필드 초기화
생성자는 일종의 메소드로 , 전달된 초기 값을 받아서 객체의 필드에 기록

메소드 선언과 유사하나 반환 값이 없으며
생성자명을 클래스명과 똑같이 지정해주어야 함.

--> JVM이 볼때
생성자 이름을 보고 아~ 여기있는 클래스를 객체로 만들거구나

기본 생성자. (매개변수가 없는 생성자)
작성하지 않을 경우, 클래스 사용시 JVM이 기본 생성자 생성


매개변수 생성자
객체 생성 시 전달 받은 값으로 객체를 초기화 하기 위해 사용
매개변수 생성자 작성시 JVM이 기본 생성자를 자동으로 초기화 해주지 않음

- 상속에서 사용시 반드시 기본생성자를 작성
- 오버로딩을 이용하여 작성

오버로딩.
같은 메소드 이름
다른 매개변수의 개수 또는 다른 매개변수 타입
조건 :매개변수의 갯수가 다르거나
      매개변수의 타입이 다르거나
      매개변수의 (타입)순서가 다를때


java.lang import하지 않아도 기본적으로

Integer.
System.
Math.
String.
https://freestrokes.tistory.com/84

this.
모든 인스턴스 메소드에 숨겨진 채 존재하는 레퍼런스로 할당된 객체를 가르킴
자기 자신(내꺼 객체)


메소드 (Method)
메소드표현식 - 매개변수가 있고 리턴값이 없을떄

[접근제한자][예약어] void 메소드명(자료형 변수명){
	// 기능 정의
}

public void informatior(String studentName){
	System.out.println(stuendtNo + " " + studentName);
}


void -> 반환형이 없을 경우 반드시 작성
연산 수행 후 반환 값이 자료형일 경우 사용
배열 - 연산 수행 후 반환값이 배열인 경우 배열의 주소값이 반환

클래스 - 연산 수행후 반환 값이 해당 클래스 타입의 객체일 경우
	 해당 객체의 주소값이반환( 클래스 == 타입)

배열, 클래스 등 참조형을 매개변수로 전달 시에는
데이터의 주소 값을 전달하기 때문에 매개변수를 수정하면
본래의 데이터가 수정됨(얕은 복사)

public int[] test1(){
   int[] iArr = {1,2,3,4};
   String name = "pack";
   int age = 20;
   char gender ='F';
   boolean b = false;
   	
   return iArr;	
}

public void test2(){

   int[] ddd = test1();

}

기본 자료형 8가지. 
그외 모두 참조형 자료형

클래스가 참조타입 자료형이 될 수 있따.

가변인자.
매개변수의 개수를 유동적으로 설정하는 방법
가변 매개변수 외 다른 매개변수가 있으면 가변 매개변수를 마지막에 설정
=> printf("%d",23);


























