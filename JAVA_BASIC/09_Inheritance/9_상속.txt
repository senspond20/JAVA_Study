상속(Inherit)

다른 클래스가 가지고 있는 멤버(필드,메소드)들을 새로 작성할 클래스에서
직접 만들지 않고 상속을 받음으로써 
새 클래스가 자신의 멤버처럼 사용할 수 있는 기능

상속의 목적
클래스의 재사용, 연관된 일련의 클래스들에 대한 공통적인 규약 정의

상속의 장점
보다 적은 양의 코드로 새로운 클래스 작성 가능
코드를 공통적으로 관리하기 때문에 코드의 추가 및 변경 용이

모든 클래스의 최상위 클래스는 Object.
모든 자바 클래스는 Object클래스의 후손
Object에 있는 필드멤버와 메소드를 받아온다.
Object클래스가 제공하는 메소드를 오버라이딩하여 재정의할 수 있다.

부모 클래스의 생성자나 초기화 블록은 상속안됨
부모의 private멤버는 상속은 되지만 직접 접근 불가

this()
super()

A extend B (extend : 확장하다(타동사) 포함하다(자동사))
A : 자식
B : 후손
자식클래스는 

* 키워드 : 예약어

자바에서는 다중상속이 안된다.
C++처럼 다중상속 허용 X

C라고 하는 자식이 A와 B 둘다 상속을 받고 싶을때 완된다.

다중상속을 흉내내고싶으면 A -> B -> C
처럼 계단식으로 상속해야한다.

후손생성자에 부모 생성자도 포함되어 있다.

오버라이딩(Overriding) -> 매소드 재정의 or 매소드 재작성
자식 클래스가 상속 받은 부모 메소드를 재작성 하는것

전제 )) -> 상속이 되어있어야 한다.
상속이 되어있지 않으면 오버라이딩은 존재하지 않는다.

모든클래스의 최상위 클래스는 Object !
===> 모든 클래스에서 오버라이딩을 할 수 있다.

특징 메소드 헤드라인 위에 반드시 Annotation, @Override 표시

접근 제어자를 부모 것보다 같거나 넓은 범위로 변경 가능.
(부모 메소드의 예외처리 클래스 처리범위보다 좁은 범위로 예외처리 클래스 수정 가능)


오버라이딩
자식 메소드의 접근 범위가
부모 메소드의 접근 범위보다
넓거나 같아야 함

메소드 이름 동일
매개변수의 개수,타입 동일
리턴 타입 동일
private 메소드 오버라이딩 불가
final 메소드 오버라이딩 불가.

private 메소드 오버라이딩 불가
final 메소드 오버라이딩 불가.


final 예약어 ==> 상속불가, 오버라이딩 불가
extends -> 상속(클래스를 수정 )

(수정불가)final 클래스 -> 상속불가 

JAVA							C#
===========================================================================
final 필드와 지역변수 ==> 값 변경 불가(상수)            readonly / const
final 메소드 => 오버라이딩 불가				sealed override
final 클래스 => 상속 불가.				sealed

추상 클래스.
미완성된 메소드는
어찌보면 다른 상속받은 클래스한테
완성해주길 강제하고 있다.

클래스에 abstract 와 final 동시 사용 불가능
메소드에 static과 abstract 동시에 사용 불가능
abstract 메소드의 접근제어자로 private 불가능

toString();
그 개체가 가지고 있는 대표값 반환
그 객체에 대한 주소값을 반환하게 되어있다.

https://docs.microsoft.com/ko-kr/dotnet/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method


< 클래스 다이어그램 >

+     	  :  public
----  	  :  static
All대문자 :  final
화살표    :  상속
